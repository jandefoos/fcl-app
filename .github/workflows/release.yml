name: Create Release
on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-20.04, windows-latest]
        name: [macos, linux, windows]

    name: Upload Release Asset
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 15

      - name: build desktop
        run: |
          npm config set -g production false
          npm install
          npx lerna bootstrap --ci
          npm run electron:build --prefix ./packages/desktop

      - name: Zip Artifacts
        run: zip -r -j fcl-desktop.zip packages/desktop/dist_electron/fcl-desktop*

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fcl-desktop.zip
          asset_name: fcl-desktop-${{ matrix.name }}.zip
          asset_content_type: application/octet-stream
